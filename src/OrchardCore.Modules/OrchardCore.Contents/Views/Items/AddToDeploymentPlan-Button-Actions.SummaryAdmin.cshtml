@using Microsoft.AspNetCore.Authorization
@using OrchardCore.ContentManagement
@using OrchardCore.Entities
@using OrchardCore.Environment.Shell
@inject IAuthorizationService AuthorizationService
@inject IContentManager ContentManager
@{
    ContentItem contentItem = Model.ContentItem;
    var hasPublished = await ContentManager.HasPublishedVersionAsync(contentItem);
    var hasDraft = contentItem.HasDraft();
    bool deploymentEnabled = false;

    if (await AuthorizationService.AuthorizeAsync(User, OrchardCore.Deployment.CommonPermissions.Export))
    {
        deploymentEnabled = true;
    }
}

@if (deploymentEnabled)
{
    if (hasDraft)
    {
        <button class="dropdown-item btn-sm" type="button" data-toggle="modal" data-target="#modalAddToDeploymentPlanActionDeploymentPlan" data-content-item-id="@contentItem.ContentItemId" data-latest=@Boolean.TrueString>@T["Add draft to deployment plan"]</button>
        if (hasPublished)
        {
            <button class="dropdown-item btn-sm" type="button" data-toggle="modal" data-target="#modalAddToDeploymentPlanActionDeploymentPlan" data-content-item-id="@contentItem.ContentItemId">@T["Add published to deployment plan"]</button>
        }
    }
    else
    {
        <button class="dropdown-item btn-sm" type="button" data-toggle="modal" data-target="#modalAddToDeploymentPlanActionDeploymentPlan" data-content-item-id="@contentItem.ContentItemId">@T["Add to deployment plan"]</button>
    }
}
